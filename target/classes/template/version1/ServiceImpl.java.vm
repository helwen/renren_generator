package ${package}.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Map;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;

import ${package}.utils.Query;
import ${package}.utils.PageUtils;
import ${package}.mapper.${className}Mapper;
import ${package}.entity.${className};
import ${package}.service.${className}Service;


@Service("${classname}Service")
public class ${className}ServiceImpl extends ServiceImpl<${className}Mapper, ${className}> implements ${className}Service {
    @Autowired
    private ${className}Mapper ${classname}Mapper;

    @Override
    public PageUtils queryPage(Map<String, Object> params) {
        Query query = new Query(params);
        QueryWrapper<${className}> queryWrapper = new QueryWrapper<${className}>();
        Page<${className}> page = new Page<${className}>(query.getPage(), query.getLimit());
        if (query.entrySet().size() > 0) {
            for (Map.Entry<String, Object> entry : query.entrySet()) {
                String key = entry.getKey();
                String value = entry.getValue().toString();
                queryWrapper.eq(key, value);
            }
        }
        IPage<${className}> result = this.page(page,queryWrapper);

        return new PageUtils(result.getRecords(), result.getTotal(),query.getLimit(),query.getPage());
    }

}